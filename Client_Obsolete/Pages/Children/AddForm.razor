@inject HttpClient Http
@inject Blazored.LocalStorage.LocalStorageService localStorage
@inject IJSRuntime js
@inject NavigationManager NavManager
@using Models
@using Classes
@using System.Net

<div class="add-user-form">
    <h2>Add new user</h2>
    <span>@result</span>
    <input type="text" name="username" @bind-value="username" placeholder="username" />
    <input type="password" name="password" @bind-value="password" placeholder="password" />
    <input type="password" name="rePassword" @bind-value="rePassword" placeholder="confirm password" />
    <button @onclick="AddUser">Add new user</button>
</div>

@code {
    private string username { get; set; }
    private string password { get; set; }
    private string rePassword { get; set; }
    private string result { get; set; }

    public async Task AddUser()
    {
        User user = new User();
        result = "";
        if (username == null || username == "")
        {
            return;
        }
        if (password == null || password == "")
        {
            return;
        }
        if (password != rePassword)
        {
            result = "Passwords do not match";
            return;
        }

        user.username = username;
        user.password = password;

        HttpRequestService<User> requestService = new HttpRequestService<User>(Http, localStorage);
        HttpResponseMessage response = await requestService.PostRequest(user, "Https://localhost:5001/API/user");

        if (response.StatusCode == HttpStatusCode.Created)
        {
            result = "Added new user " + user.username;
        }
        else if (response.StatusCode == HttpStatusCode.Unauthorized)
        {
            result = "Unauthorized to add new user, try logging back in";
        }
        else
        {
            result = "Unable to add user";
        }

        username = "";
        password = "";
        rePassword = "";

    }

}
